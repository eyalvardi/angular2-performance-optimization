/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var import1 = require('@angular/core/src/linker/view');
var import2 = require('@angular/core/src/linker/element');
var import3 = require('../../../../app/demos/accordion/accordion.component');
var import4 = require('@angular/core/src/linker/view_utils');
var import6 = require('@angular/core/src/linker/view_type');
var import7 = require('@angular/core/src/change_detection/change_detection');
var import8 = require('@angular/core/src/linker/element_ref');
var import9 = require('@angular/core/src/zone/ng_zone');
var import10 = require('@angular/core/src/application_ref');
var import11 = require('@angular/core/src/metadata/view');
var import12 = require('@angular/core/src/linker/component_factory');
var renderType_AccordionComponent_Host = null;
var _View_AccordionComponent_Host0 = (function (_super) {
    __extends(_View_AccordionComponent_Host0, _super);
    function _View_AccordionComponent_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_AccordionComponent_Host0, renderType_AccordionComponent_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_AccordionComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('accordion', rootSelector, null);
        this._appEl_0 = new import2.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_AccordionComponent0(this.viewUtils, this.injector(0), this._appEl_0);
        this._AccordionComponent_0_4 = new import3.AccordionComponent(new import8.ElementRef(this._el_0), this.renderer, this.parentInjector.get(import9.NgZone), compView_0.ref, this.parentInjector.get(import10.ApplicationRef));
        this._appEl_0.initComponent(this._AccordionComponent_0_4, [], compView_0);
        compView_0.create(this._AccordionComponent_0_4, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_AccordionComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import3.AccordionComponent) && (0 === requestNodeIndex))) {
            return this._AccordionComponent_0_4;
        }
        return notFoundResult;
    };
    return _View_AccordionComponent_Host0;
}(import1.AppView));
function viewFactory_AccordionComponent_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_AccordionComponent_Host === null)) {
        (renderType_AccordionComponent_Host = viewUtils.createRenderComponentType('', 0, import11.ViewEncapsulation.None, [], {}));
    }
    return new _View_AccordionComponent_Host0(viewUtils, parentInjector, declarationEl);
}
exports.AccordionComponentNgFactory = new import12.ComponentFactory('accordion', viewFactory_AccordionComponent_Host0, import3.AccordionComponent);
var styles_AccordionComponent = ['[_nghost-%COMP%]{ display: block; }'];
var renderType_AccordionComponent = null;
var _View_AccordionComponent0 = (function (_super) {
    __extends(_View_AccordionComponent0, _super);
    function _View_AccordionComponent0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_AccordionComponent0, renderType_AccordionComponent, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_AccordionComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this._el_1 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_1, 'class', 'panel-group');
        this._text_2 = this.renderer.createText(this._el_1, '\n      ', null);
        this.renderer.projectNodes(this._el_1, import4.flattenNestedViewRenderNodes(this.projectableNodes[0]));
        this._text_3 = this.renderer.createText(this._el_1, '\n    ', null);
        this._text_4 = this.renderer.createText(parentRenderNode, '\n', null);
        this.init([], [
            this._text_0,
            this._el_1,
            this._text_2,
            this._text_3,
            this._text_4
        ], [], []);
        return null;
    };
    return _View_AccordionComponent0;
}(import1.AppView));
function viewFactory_AccordionComponent0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_AccordionComponent === null)) {
        (renderType_AccordionComponent = viewUtils.createRenderComponentType('', 1, import11.ViewEncapsulation.Emulated, styles_AccordionComponent, {}));
    }
    return new _View_AccordionComponent0(viewUtils, parentInjector, declarationEl);
}
exports.viewFactory_AccordionComponent0 = viewFactory_AccordionComponent0;
//# sourceMappingURL=accordion.component.ngfactory.js.map