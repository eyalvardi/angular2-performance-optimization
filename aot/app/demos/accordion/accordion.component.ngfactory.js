/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '../../../../app/demos/accordion/accordion.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/constants';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@angular/core/src/linker/element_ref';
import * as import9 from '@angular/core/src/zone/ng_zone';
import * as import10 from '@angular/core/src/application_ref';
var Wrapper_AccordionComponent = (function () {
    function Wrapper_AccordionComponent(p0, p1, p2, p3, p4) {
        this._changed = false;
        this.context = new import0.AccordionComponent(p0, p1, p2, p3, p4);
    }
    Wrapper_AccordionComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_AccordionComponent.prototype.ngOnDestroy = function () {
    };
    Wrapper_AccordionComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            this.context.ngDoCheck();
        }
        return changed;
    };
    Wrapper_AccordionComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_AccordionComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_AccordionComponent.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_AccordionComponent;
}());
export { Wrapper_AccordionComponent };
var renderType_AccordionComponent_Host = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, [], {});
var View_AccordionComponent_Host0 = (function (_super) {
    __extends(View_AccordionComponent_Host0, _super);
    function View_AccordionComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        return _super.call(this, View_AccordionComponent_Host0, renderType_AccordionComponent_Host, import5.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways) || this;
    }
    View_AccordionComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'accordion', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_AccordionComponent0(this.viewUtils, this, 0, this._el_0);
        this._AccordionComponent_0_3 = new Wrapper_AccordionComponent(new import8.ElementRef(this._el_0), this.renderer, this.injectorGet(import9.NgZone, this.parentIndex), this.compView_0.ref, this.injectorGet(import10.ApplicationRef, this.parentIndex));
        this.compView_0.create(this._AccordionComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._AccordionComponent_0_3.context);
    };
    View_AccordionComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.AccordionComponent) && (0 === requestNodeIndex))) {
            return this._AccordionComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_AccordionComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._AccordionComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_AccordionComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_AccordionComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_AccordionComponent_Host0.prototype.visitProjectableNodesInternal = function (nodeIndex, ngContentIndex, cb, ctx) {
        if (((nodeIndex == 0) && (ngContentIndex == 0))) { }
    };
    return View_AccordionComponent_Host0;
}(import1.AppView));
export var AccordionComponentNgFactory = new import7.ComponentFactory('accordion', View_AccordionComponent_Host0, import0.AccordionComponent);
var styles_AccordionComponent = ['[_nghost-%COMP%]{ display: block; }'];
var renderType_AccordionComponent = import3.createRenderComponentType('', 1, import4.ViewEncapsulation.Emulated, styles_AccordionComponent, {});
var View_AccordionComponent0 = (function (_super) {
    __extends(View_AccordionComponent0, _super);
    function View_AccordionComponent0(viewUtils, parentView, parentIndex, parentElement) {
        return _super.call(this, View_AccordionComponent0, renderType_AccordionComponent, import5.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways) || this;
    }
    View_AccordionComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this._el_1 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'class', 'panel-group'), null);
        this._text_2 = this.renderer.createText(this._el_1, '\n      ', null);
        this.projectNodes(this._el_1, 0);
        this._text_3 = this.renderer.createText(this._el_1, '\n    ', null);
        this._text_4 = this.renderer.createText(parentRenderNode, '\n', null);
        this.init(null, (this.renderer.directRenderer ? null : [
            this._text_0,
            this._el_1,
            this._text_2,
            this._text_3,
            this._text_4
        ]), null);
        return null;
    };
    return View_AccordionComponent0;
}(import1.AppView));
export { View_AccordionComponent0 };
//# sourceMappingURL=accordion.component.ngfactory.js.map