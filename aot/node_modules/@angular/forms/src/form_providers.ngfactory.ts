/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/forms/src/form_providers';
import * as import2 from '@angular/forms/src/directives';
import * as import3 from '@angular/forms/src/directives/radio_control_value_accessor';
import * as import4 from '@angular/core/src/di/injector';
import * as import5 from '@angular/forms/src/form_builder';
class FormsModuleInjector extends import0.NgModuleInjector<import1.FormsModule> {
  _InternalFormsSharedModule_0:import2.InternalFormsSharedModule;
  _FormsModule_1:import1.FormsModule;
  __RadioControlRegistry_2:import3.RadioControlRegistry;
  constructor(parent:import4.Injector) {
    super(parent,[],[]);
  }
  get _RadioControlRegistry_2():import3.RadioControlRegistry {
    if ((this.__RadioControlRegistry_2 == (null as any))) { (this.__RadioControlRegistry_2 = new import3.RadioControlRegistry()); }
    return this.__RadioControlRegistry_2;
  }
  createInternal():import1.FormsModule {
    this._InternalFormsSharedModule_0 = new import2.InternalFormsSharedModule();
    this._FormsModule_1 = new import1.FormsModule();
    return this._FormsModule_1;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.InternalFormsSharedModule)) { return this._InternalFormsSharedModule_0; }
    if ((token === import1.FormsModule)) { return this._FormsModule_1; }
    if ((token === import3.RadioControlRegistry)) { return this._RadioControlRegistry_2; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const FormsModuleNgFactory:import0.NgModuleFactory<import1.FormsModule> = new import0.NgModuleFactory(FormsModuleInjector,import1.FormsModule);
class ReactiveFormsModuleInjector extends import0.NgModuleInjector<import1.ReactiveFormsModule> {
  _InternalFormsSharedModule_0:import2.InternalFormsSharedModule;
  _ReactiveFormsModule_1:import1.ReactiveFormsModule;
  __FormBuilder_2:import5.FormBuilder;
  __RadioControlRegistry_3:import3.RadioControlRegistry;
  constructor(parent:import4.Injector) {
    super(parent,[],[]);
  }
  get _FormBuilder_2():import5.FormBuilder {
    if ((this.__FormBuilder_2 == (null as any))) { (this.__FormBuilder_2 = new import5.FormBuilder()); }
    return this.__FormBuilder_2;
  }
  get _RadioControlRegistry_3():import3.RadioControlRegistry {
    if ((this.__RadioControlRegistry_3 == (null as any))) { (this.__RadioControlRegistry_3 = new import3.RadioControlRegistry()); }
    return this.__RadioControlRegistry_3;
  }
  createInternal():import1.ReactiveFormsModule {
    this._InternalFormsSharedModule_0 = new import2.InternalFormsSharedModule();
    this._ReactiveFormsModule_1 = new import1.ReactiveFormsModule();
    return this._ReactiveFormsModule_1;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.InternalFormsSharedModule)) { return this._InternalFormsSharedModule_0; }
    if ((token === import1.ReactiveFormsModule)) { return this._ReactiveFormsModule_1; }
    if ((token === import5.FormBuilder)) { return this._FormBuilder_2; }
    if ((token === import3.RadioControlRegistry)) { return this._RadioControlRegistry_3; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const ReactiveFormsModuleNgFactory:import0.NgModuleFactory<import1.ReactiveFormsModule> = new import0.NgModuleFactory(ReactiveFormsModuleInjector,import1.ReactiveFormsModule);