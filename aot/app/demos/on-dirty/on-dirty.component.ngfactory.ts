/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../app/demos/on-dirty/on-dirty.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/constants';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@angular/core/src/linker/element_ref';
import * as import9 from '@angular/core/src/zone/ng_zone';
import * as import10 from '@angular/core/src/application_ref';
import * as import11 from '../../../../app/demos/on-dirty/up-down.component';
import * as import12 from './up-down.component.ngfactory';
import * as import13 from '@angular/core/src/change_detection/change_detection_util';
export class Wrapper_OnDirtyDemoComponent {
  /*private*/ _eventHandler:Function;
  context:import0.OnDirtyDemoComponent;
  /*private*/ _changed:boolean;
  constructor(p0:any,p1:any,p2:any,p3:any,p4:any) {
    this._changed = false;
    this.context = new import0.OnDirtyDemoComponent(p0,p1,p2,p3,p4);
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) {
      if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); }
      this.context.ngDoCheck();
    }
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_OnDirtyDemoComponent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_OnDirtyDemoComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.OnDirtyDemoComponent>;
  _OnDirtyDemoComponent_0_3:Wrapper_OnDirtyDemoComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_OnDirtyDemoComponent_Host0,renderType_OnDirtyDemoComponent_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'ng-component',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_OnDirtyDemoComponent0(this.viewUtils,this,0,this._el_0);
    this._OnDirtyDemoComponent_0_3 = new Wrapper_OnDirtyDemoComponent(new import8.ElementRef(this._el_0),this.renderer,this.injectorGet(import9.NgZone,this.parentIndex),this.compView_0.ref,this.injectorGet(import10.ApplicationRef,this.parentIndex));
    this.compView_0.create(this._OnDirtyDemoComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._OnDirtyDemoComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.OnDirtyDemoComponent) && (0 === requestNodeIndex))) { return this._OnDirtyDemoComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._OnDirtyDemoComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const OnDirtyDemoComponentNgFactory:import7.ComponentFactory<import0.OnDirtyDemoComponent> = new import7.ComponentFactory<import0.OnDirtyDemoComponent>('ng-component',View_OnDirtyDemoComponent_Host0,import0.OnDirtyDemoComponent);
const styles_OnDirtyDemoComponent:any[] = ['[_nghost-%COMP%]{\n            display: block;           \n            margin: 8px;\n                        \n    }\n    .trg-up[_ngcontent-%COMP%] {\n         width: 0;\n         height: 0;\n         border-left  : 5px solid transparent;\n         border-right : 5px solid transparent;\n         border-bottom: 10px solid green;\n     }\n     .trg-down[_ngcontent-%COMP%] {\n         width: 0;\n         height: 0;\n         border-left  : 5px solid transparent;\n         border-right : 5px solid transparent;\n         border-top: 10px solid red;\n     }'];
var renderType_OnDirtyDemoComponent:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.Emulated,styles_OnDirtyDemoComponent,{});
export class View_OnDirtyDemoComponent0 extends import1.AppView<import0.OnDirtyDemoComponent> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _text_6:any;
  _el_7:any;
  _text_8:any;
  _text_9:any;
  _el_10:any;
  compView_10:import1.AppView<import11.UpDownComponent>;
  _UpDownComponent_10_3:import12.Wrapper_UpDownComponent;
  _text_11:any;
  _el_12:any;
  _text_13:any;
  _text_14:any;
  _el_15:any;
  compView_15:import1.AppView<import11.UpDownComponent>;
  _UpDownComponent_15_3:import12.Wrapper_UpDownComponent;
  _text_16:any;
  _el_17:any;
  _text_18:any;
  _text_19:any;
  _el_20:any;
  compView_20:import1.AppView<import11.UpDownComponent>;
  _UpDownComponent_20_3:import12.Wrapper_UpDownComponent;
  _text_21:any;
  _el_22:any;
  _text_23:any;
  _el_24:any;
  _text_25:any;
  _text_26:any;
  _el_27:any;
  _text_28:any;
  _text_29:any;
  _el_30:any;
  _text_31:any;
  _text_32:any;
  _el_33:any;
  _text_34:any;
  _text_35:any;
  _text_36:any;
  /*private*/ _expr_43:any;
  /*private*/ _expr_44:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_OnDirtyDemoComponent0,renderType_OnDirtyDemoComponent,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
    this._expr_43 = import13.UNINITIALIZED;
    this._expr_44 = import13.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'\n  ',(null as any));
    this._text_3 = this.renderer.createText(this._el_1,'\n  ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_1,'p',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_5 = this.renderer.createText(this._el_4,'\n      This demo shows how we can work with an Observable class and its operators to reduce the amount of\n      updates, meaning less expressions to calculate. The component is detached form the component tree and the update happens\n      only when item comes up from the observable.\n  ',(null as any));
    this._text_6 = this.renderer.createText(this._el_1,'\n  ',(null as any));
    this._el_7 = import3.createRenderElement(this.renderer,this._el_1,'h4',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_8 = this.renderer.createText(this._el_7,'Stream I (source) - Update every 10ms.',(null as any));
    this._text_9 = this.renderer.createText(this._el_1,'\n  ',(null as any));
    this._el_10 = import3.createRenderElement(this.renderer,this._el_1,'up-down',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_10 = new import12.View_UpDownComponent0(this.viewUtils,this,10,this._el_10);
    this._UpDownComponent_10_3 = new import12.Wrapper_UpDownComponent(this.parentView.injectorGet(import9.NgZone,this.parentIndex),this.compView_10.ref);
    this.compView_10.create(this._UpDownComponent_10_3.context);
    this._text_11 = this.renderer.createText(this._el_1,'\n  \n  ',(null as any));
    this._el_12 = import3.createRenderElement(this.renderer,this._el_1,'h4',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_13 = this.renderer.createText(this._el_12,'Stream II (auditTime) - source.auditTime(500)',(null as any));
    this._text_14 = this.renderer.createText(this._el_1,'\n  ',(null as any));
    this._el_15 = import3.createRenderElement(this.renderer,this._el_1,'up-down',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_15 = new import12.View_UpDownComponent0(this.viewUtils,this,15,this._el_15);
    this._UpDownComponent_15_3 = new import12.Wrapper_UpDownComponent(this.parentView.injectorGet(import9.NgZone,this.parentIndex),this.compView_15.ref);
    this.compView_15.create(this._UpDownComponent_15_3.context);
    this._text_16 = this.renderer.createText(this._el_1,'\n  \n  ',(null as any));
    this._el_17 = import3.createRenderElement(this.renderer,this._el_1,'h4',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_18 = this.renderer.createText(this._el_17,'Stream III - auditTime.threshold(15)',(null as any));
    this._text_19 = this.renderer.createText(this._el_1,'\n  ',(null as any));
    this._el_20 = import3.createRenderElement(this.renderer,this._el_1,'up-down',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_20 = new import12.View_UpDownComponent0(this.viewUtils,this,20,this._el_20);
    this._UpDownComponent_20_3 = new import12.Wrapper_UpDownComponent(this.parentView.injectorGet(import9.NgZone,this.parentIndex),this.compView_20.ref);
    this.compView_20.create(this._UpDownComponent_20_3.context);
    this._text_21 = this.renderer.createText(this._el_1,'\n  ',(null as any));
    this._el_22 = import3.createRenderElement(this.renderer,this._el_1,'hr',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_23 = this.renderer.createText(this._el_1,'\n  \n  ',(null as any));
    this._el_24 = import3.createRenderElement(this.renderer,this._el_1,'h4',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_25 = this.renderer.createText(this._el_24,'Threshold',(null as any));
    this._text_26 = this.renderer.createText(this._el_1,'\n  ',(null as any));
    this._el_27 = import3.createRenderElement(this.renderer,this._el_1,'pre',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_28 = this.renderer.createText(this._el_27,'',(null as any));
    this._text_29 = this.renderer.createText(this._el_1,'\n  \n  ',(null as any));
    this._el_30 = import3.createRenderElement(this.renderer,this._el_1,'h4',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_31 = this.renderer.createText(this._el_30,'Up & Down triangle',(null as any));
    this._text_32 = this.renderer.createText(this._el_1,'\n  ',(null as any));
    this._el_33 = import3.createRenderElement(this.renderer,this._el_1,'pre',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_34 = this.renderer.createText(this._el_33,'',(null as any));
    this._text_35 = this.renderer.createText(this._el_1,'-\n',(null as any));
    this._text_36 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._el_12,
      this._text_13,
      this._text_14,
      this._el_15,
      this._text_16,
      this._el_17,
      this._text_18,
      this._text_19,
      this._el_20,
      this._text_21,
      this._el_22,
      this._text_23,
      this._el_24,
      this._text_25,
      this._text_26,
      this._el_27,
      this._text_28,
      this._text_29,
      this._el_30,
      this._text_31,
      this._text_32,
      this._el_33,
      this._text_34,
      this._text_35,
      this._text_36
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import11.UpDownComponent) && (10 === requestNodeIndex))) { return this._UpDownComponent_10_3.context; }
    if (((token === import11.UpDownComponent) && (15 === requestNodeIndex))) { return this._UpDownComponent_15_3.context; }
    if (((token === import11.UpDownComponent) && (20 === requestNodeIndex))) { return this._UpDownComponent_20_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_10_0_0:any = this.context.feed;
    this._UpDownComponent_10_3.check_source(currVal_10_0_0,throwOnChange,false);
    this._UpDownComponent_10_3.ngDoCheck(this,this._el_10,throwOnChange);
    const currVal_15_0_0:any = this.context.auditTimeFeed;
    this._UpDownComponent_15_3.check_source(currVal_15_0_0,throwOnChange,false);
    this._UpDownComponent_15_3.ngDoCheck(this,this._el_15,throwOnChange);
    const currVal_20_0_0:any = this.context.thresholdFeed;
    this._UpDownComponent_20_3.check_source(currVal_20_0_0,throwOnChange,false);
    this._UpDownComponent_20_3.ngDoCheck(this,this._el_20,throwOnChange);
    const currVal_43:any = import3.inlineInterpolate(1,'',this.context.thresholdCode,'');
    if (import3.checkBinding(throwOnChange,this._expr_43,currVal_43)) {
      this.renderer.setText(this._text_28,currVal_43);
      this._expr_43 = currVal_43;
    }
    const currVal_44:any = import3.inlineInterpolate(1,'',this.context.upDownCode,'');
    if (import3.checkBinding(throwOnChange,this._expr_44,currVal_44)) {
      this.renderer.setText(this._text_34,currVal_44);
      this._expr_44 = currVal_44;
    }
    this.compView_10.internalDetectChanges(throwOnChange);
    this.compView_15.internalDetectChanges(throwOnChange);
    this.compView_20.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_10.destroy();
    this.compView_15.destroy();
    this.compView_20.destroy();
    this._UpDownComponent_10_3.ngOnDestroy();
    this._UpDownComponent_15_3.ngOnDestroy();
    this._UpDownComponent_20_3.ngOnDestroy();
  }
}