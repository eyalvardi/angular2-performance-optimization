/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '../../../app/demos/home.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/constants';
import * as import7 from '@angular/core/src/linker/component_factory';
var Wrapper_HomeComponent = (function () {
    function Wrapper_HomeComponent() {
        this._changed = false;
        this.context = new import0.HomeComponent();
    }
    Wrapper_HomeComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_HomeComponent.prototype.ngOnDestroy = function () {
    };
    Wrapper_HomeComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_HomeComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_HomeComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_HomeComponent.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_HomeComponent;
}());
export { Wrapper_HomeComponent };
var renderType_HomeComponent_Host = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, [], {});
var View_HomeComponent_Host0 = (function (_super) {
    __extends(View_HomeComponent_Host0, _super);
    function View_HomeComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        return _super.call(this, View_HomeComponent_Host0, renderType_HomeComponent_Host, import5.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways) || this;
    }
    View_HomeComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'ng-component', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_HomeComponent0(this.viewUtils, this, 0, this._el_0);
        this._HomeComponent_0_3 = new Wrapper_HomeComponent();
        this.compView_0.create(this._HomeComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._HomeComponent_0_3.context);
    };
    View_HomeComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.HomeComponent) && (0 === requestNodeIndex))) {
            return this._HomeComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_HomeComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._HomeComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_HomeComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_HomeComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_HomeComponent_Host0;
}(import1.AppView));
export var HomeComponentNgFactory = new import7.ComponentFactory('ng-component', View_HomeComponent_Host0, import0.HomeComponent);
var styles_HomeComponent = [];
var renderType_HomeComponent = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, styles_HomeComponent, {});
var View_HomeComponent0 = (function (_super) {
    __extends(View_HomeComponent0, _super);
    function View_HomeComponent0(viewUtils, parentView, parentIndex, parentElement) {
        return _super.call(this, View_HomeComponent0, renderType_HomeComponent, import5.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways) || this;
    }
    View_HomeComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this._el_1 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', import3.EMPTY_INLINE_ARRAY, null);
        this._text_2 = this.renderer.createText(this._el_1, '\n        ', null);
        this._el_3 = import3.createRenderElement(this.renderer, this._el_1, 'div', new import3.InlineArray2(2, 'class', 'starter-template'), null);
        this._text_4 = this.renderer.createText(this._el_3, '\n            ', null);
        this._el_5 = import3.createRenderElement(this.renderer, this._el_3, 'a', new import3.InlineArray4(4, 'href', 'http://ng-course.org', 'target', '_blank'), null);
        this._text_6 = this.renderer.createText(this._el_5, '\n                ', null);
        this._el_7 = import3.createRenderElement(this.renderer, this._el_5, 'img', new import3.InlineArray4(4, 'src', 'images/ng-course.png', 'width', '500'), null);
        this._text_8 = this.renderer.createText(this._el_5, '\n            ', null);
        this._text_9 = this.renderer.createText(this._el_3, '\n            ', null);
        this._el_10 = import3.createRenderElement(this.renderer, this._el_3, 'br', import3.EMPTY_INLINE_ARRAY, null);
        this._text_11 = this.renderer.createText(this._el_3, '\n           ', null);
        this._el_12 = import3.createRenderElement(this.renderer, this._el_3, 'h3', import3.EMPTY_INLINE_ARRAY, null);
        this._text_13 = this.renderer.createText(this._el_12, 'Performance Optimization in Angular (', null);
        this._el_14 = import3.createRenderElement(this.renderer, this._el_12, 'a', new import3.InlineArray4(4, 'href', 'https://eyalvardi.wordpress.com/2016/12/20/performance-optimization-in-angular-2-0/', 'target', '_blank'), null);
        this._text_15 = this.renderer.createText(this._el_14, 'post', null);
        this._text_16 = this.renderer.createText(this._el_12, ')', null);
        this._text_17 = this.renderer.createText(this._el_3, '\n           ', null);
        this._text_18 = this.renderer.createText(this._el_3, '\n           ', null);
        this._el_19 = import3.createRenderElement(this.renderer, this._el_3, 'br', import3.EMPTY_INLINE_ARRAY, null);
        this._text_20 = this.renderer.createText(this._el_3, '\n           ', null);
        this._el_21 = import3.createRenderElement(this.renderer, this._el_3, 'h4', import3.EMPTY_INLINE_ARRAY, null);
        this._text_22 = this.renderer.createText(this._el_21, 'High Frequency Problem (tick):', null);
        this._text_23 = this.renderer.createText(this._el_3, '\n           ', null);
        this._el_24 = import3.createRenderElement(this.renderer, this._el_3, 'ol', import3.EMPTY_INLINE_ARRAY, null);
        this._text_25 = this.renderer.createText(this._el_24, '\n                ', null);
        this._el_26 = import3.createRenderElement(this.renderer, this._el_24, 'li', import3.EMPTY_INLINE_ARRAY, null);
        this._text_27 = this.renderer.createText(this._el_26, '\n                   ', null);
        this._el_28 = import3.createRenderElement(this.renderer, this._el_26, 'img', new import3.InlineArray8(6, 'align', 'right', 'height', '200', 'src', 'images/n_counters.png'), null);
        this._text_29 = this.renderer.createText(this._el_26, '\n                   ', null);
        this._el_30 = import3.createRenderElement(this.renderer, this._el_26, 'h4', import3.EMPTY_INLINE_ARRAY, null);
        this._text_31 = this.renderer.createText(this._el_30, 'Counter demo:', null);
        this._text_32 = this.renderer.createText(this._el_26, '\n                   ', null);
        this._el_33 = import3.createRenderElement(this.renderer, this._el_26, 'div', import3.EMPTY_INLINE_ARRAY, null);
        this._text_34 = this.renderer.createText(this._el_33, '                \n                        ', null);
        this._el_35 = import3.createRenderElement(this.renderer, this._el_33, 'p', import3.EMPTY_INLINE_ARRAY, null);
        this._text_36 = this.renderer.createText(this._el_35, '\n                            This demo shows how we can stop the tick that setTimeout causes by \n                            using NgZone class and how to update the component area with \n                            ChangeDetectorRef class. By doing so we improve the performance because \n                            we reduce the tick frequency, meaning less calculations per second. \n                        ', null);
        this._text_37 = this.renderer.createText(this._el_33, '\n                        ', null);
        this._el_38 = import3.createRenderElement(this.renderer, this._el_33, 'p', import3.EMPTY_INLINE_ARRAY, null);
        this._text_39 = this.renderer.createText(this._el_38, '\n                            When we use this approach we are limited by the number of counters \n                            that we can put on the page. Each counter uses on setTimeout function \n                            and this can cause the UI thread queue to be overloaded.\n                        ', null);
        this._text_40 = this.renderer.createText(this._el_33, '                   \n                   ', null);
        this._text_41 = this.renderer.createText(this._el_26, '\n                   ', null);
        this._el_42 = import3.createRenderElement(this.renderer, this._el_26, 'br', import3.EMPTY_INLINE_ARRAY, null);
        this._text_43 = this.renderer.createText(this._el_26, '\n                ', null);
        this._text_44 = this.renderer.createText(this._el_24, '\n                ', null);
        this._el_45 = import3.createRenderElement(this.renderer, this._el_24, 'li', import3.EMPTY_INLINE_ARRAY, null);
        this._text_46 = this.renderer.createText(this._el_45, '\n                    ', null);
        this._el_47 = import3.createRenderElement(this.renderer, this._el_45, 'h4', import3.EMPTY_INLINE_ARRAY, null);
        this._text_48 = this.renderer.createText(this._el_47, 'Board demo:', null);
        this._text_49 = this.renderer.createText(this._el_45, '\n                   ', null);
        this._el_50 = import3.createRenderElement(this.renderer, this._el_45, 'div', import3.EMPTY_INLINE_ARRAY, null);
        this._text_51 = this.renderer.createText(this._el_50, '\n                        ', null);
        this._el_52 = import3.createRenderElement(this.renderer, this._el_50, 'p', import3.EMPTY_INLINE_ARRAY, null);
        this._text_53 = this.renderer.createText(this._el_52, '\n                            This demo shows how we use only 1 setTimeout in the parent \n                            component to update all its children. Now we can put many more \n                            counters on the page. We will continue to use NgZone to stop the tick.\n                        ', null);
        this._text_54 = this.renderer.createText(this._el_50, '\n                        ', null);
        this._el_55 = import3.createRenderElement(this.renderer, this._el_50, 'p', import3.EMPTY_INLINE_ARRAY, null);
        this._text_56 = this.renderer.createText(this._el_55, '\n                            If the execute handler of the setTimeout takes too long because\n                            we are updating too many counters, the UI will be stuck.\n                        ', null);
        this._text_57 = this.renderer.createText(this._el_50, '                \n                   ', null);
        this._text_58 = this.renderer.createText(this._el_45, '        \n                   ', null);
        this._el_59 = import3.createRenderElement(this.renderer, this._el_45, 'br', import3.EMPTY_INLINE_ARRAY, null);
        this._text_60 = this.renderer.createText(this._el_45, '\n                ', null);
        this._text_61 = this.renderer.createText(this._el_24, '\n                ', null);
        this._el_62 = import3.createRenderElement(this.renderer, this._el_24, 'li', import3.EMPTY_INLINE_ARRAY, null);
        this._text_63 = this.renderer.createText(this._el_62, '\n                   ', null);
        this._el_64 = import3.createRenderElement(this.renderer, this._el_62, 'h4', import3.EMPTY_INLINE_ARRAY, null);
        this._text_65 = this.renderer.createText(this._el_64, 'Accordion demo:', null);
        this._text_66 = this.renderer.createText(this._el_62, '\n                   ', null);
        this._el_67 = import3.createRenderElement(this.renderer, this._el_62, 'div', import3.EMPTY_INLINE_ARRAY, null);
        this._text_68 = this.renderer.createText(this._el_67, '\n                        ', null);
        this._el_69 = import3.createRenderElement(this.renderer, this._el_67, 'p', import3.EMPTY_INLINE_ARRAY, null);
        this._text_70 = this.renderer.createText(this._el_69, '\n                            This demo shows how we can stop the tick that happens because a click event. \n                            In this approach we can\'t register an event in the template because we need\n                            to use the NgZone class.\n                        ', null);
        this._text_71 = this.renderer.createText(this._el_67, '                              \n                   ', null);
        this._text_72 = this.renderer.createText(this._el_62, '\n                   ', null);
        this._el_73 = import3.createRenderElement(this.renderer, this._el_62, 'br', import3.EMPTY_INLINE_ARRAY, null);
        this._text_74 = this.renderer.createText(this._el_62, '\n               ', null);
        this._text_75 = this.renderer.createText(this._el_24, '\n           ', null);
        this._text_76 = this.renderer.createText(this._el_3, '\n           ', null);
        this._el_77 = import3.createRenderElement(this.renderer, this._el_3, 'h4', import3.EMPTY_INLINE_ARRAY, null);
        this._text_78 = this.renderer.createText(this._el_77, 'High Expressions Problem:', null);
        this._text_79 = this.renderer.createText(this._el_3, '\n           ', null);
        this._el_80 = import3.createRenderElement(this.renderer, this._el_3, 'ol', import3.EMPTY_INLINE_ARRAY, null);
        this._text_81 = this.renderer.createText(this._el_80, '\n           ', null);
        this._el_82 = import3.createRenderElement(this.renderer, this._el_80, 'li', import3.EMPTY_INLINE_ARRAY, null);
        this._text_83 = this.renderer.createText(this._el_82, '\n           ', null);
        this._el_84 = import3.createRenderElement(this.renderer, this._el_82, 'h4', import3.EMPTY_INLINE_ARRAY, null);
        this._text_85 = this.renderer.createText(this._el_84, 'On-Push demo:', null);
        this._text_86 = this.renderer.createText(this._el_82, '\n           ', null);
        this._el_87 = import3.createRenderElement(this.renderer, this._el_82, 'div', import3.EMPTY_INLINE_ARRAY, null);
        this._text_88 = this.renderer.createText(this._el_87, '\n                ', null);
        this._el_89 = import3.createRenderElement(this.renderer, this._el_87, 'p', import3.EMPTY_INLINE_ARRAY, null);
        this._text_90 = this.renderer.createText(this._el_89, '\n                    This demo shows how to reduce the amount of expressions that need to calculate \n                    every tick by using the on-push strategy. The on-push strategy will calculate \n                    the component expressions only if the input has changed.\n                ', null);
        this._text_91 = this.renderer.createText(this._el_87, '                              \n           ', null);
        this._text_92 = this.renderer.createText(this._el_82, '\n           ', null);
        this._el_93 = import3.createRenderElement(this.renderer, this._el_82, 'br', import3.EMPTY_INLINE_ARRAY, null);
        this._text_94 = this.renderer.createText(this._el_82, '\n           ', null);
        this._text_95 = this.renderer.createText(this._el_80, '\n           ', null);
        this._el_96 = import3.createRenderElement(this.renderer, this._el_80, 'li', import3.EMPTY_INLINE_ARRAY, null);
        this._text_97 = this.renderer.createText(this._el_96, '\n           ', null);
        this._el_98 = import3.createRenderElement(this.renderer, this._el_96, 'h4', import3.EMPTY_INLINE_ARRAY, null);
        this._text_99 = this.renderer.createText(this._el_98, 'On-Dirty demo:', null);
        this._text_100 = this.renderer.createText(this._el_96, '\n           ', null);
        this._el_101 = import3.createRenderElement(this.renderer, this._el_96, 'div', import3.EMPTY_INLINE_ARRAY, null);
        this._text_102 = this.renderer.createText(this._el_101, '\n                ', null);
        this._el_103 = import3.createRenderElement(this.renderer, this._el_101, 'p', import3.EMPTY_INLINE_ARRAY, null);
        this._text_104 = this.renderer.createText(this._el_103, '\n                    This demo shows how we can work with an Observable class and its operators to reduce the amount of\n                    updates, meaning less expressions to calculate. The component is detached form the component tree and the update happens\n                    only when item comes up from the observable.\n                ', null);
        this._text_105 = this.renderer.createText(this._el_101, '                              \n           ', null);
        this._text_106 = this.renderer.createText(this._el_96, '\n           ', null);
        this._text_107 = this.renderer.createText(this._el_80, '\n           ', null);
        this._text_108 = this.renderer.createText(this._el_3, '\n        ', null);
        this._text_109 = this.renderer.createText(this._el_1, '\n  ', null);
        this._text_110 = this.renderer.createText(parentRenderNode, '\n', null);
        this.init(null, (this.renderer.directRenderer ? null : [
            this._text_0,
            this._el_1,
            this._text_2,
            this._el_3,
            this._text_4,
            this._el_5,
            this._text_6,
            this._el_7,
            this._text_8,
            this._text_9,
            this._el_10,
            this._text_11,
            this._el_12,
            this._text_13,
            this._el_14,
            this._text_15,
            this._text_16,
            this._text_17,
            this._text_18,
            this._el_19,
            this._text_20,
            this._el_21,
            this._text_22,
            this._text_23,
            this._el_24,
            this._text_25,
            this._el_26,
            this._text_27,
            this._el_28,
            this._text_29,
            this._el_30,
            this._text_31,
            this._text_32,
            this._el_33,
            this._text_34,
            this._el_35,
            this._text_36,
            this._text_37,
            this._el_38,
            this._text_39,
            this._text_40,
            this._text_41,
            this._el_42,
            this._text_43,
            this._text_44,
            this._el_45,
            this._text_46,
            this._el_47,
            this._text_48,
            this._text_49,
            this._el_50,
            this._text_51,
            this._el_52,
            this._text_53,
            this._text_54,
            this._el_55,
            this._text_56,
            this._text_57,
            this._text_58,
            this._el_59,
            this._text_60,
            this._text_61,
            this._el_62,
            this._text_63,
            this._el_64,
            this._text_65,
            this._text_66,
            this._el_67,
            this._text_68,
            this._el_69,
            this._text_70,
            this._text_71,
            this._text_72,
            this._el_73,
            this._text_74,
            this._text_75,
            this._text_76,
            this._el_77,
            this._text_78,
            this._text_79,
            this._el_80,
            this._text_81,
            this._el_82,
            this._text_83,
            this._el_84,
            this._text_85,
            this._text_86,
            this._el_87,
            this._text_88,
            this._el_89,
            this._text_90,
            this._text_91,
            this._text_92,
            this._el_93,
            this._text_94,
            this._text_95,
            this._el_96,
            this._text_97,
            this._el_98,
            this._text_99,
            this._text_100,
            this._el_101,
            this._text_102,
            this._el_103,
            this._text_104,
            this._text_105,
            this._text_106,
            this._text_107,
            this._text_108,
            this._text_109,
            this._text_110
        ]), null);
        return null;
    };
    return View_HomeComponent0;
}(import1.AppView));
export { View_HomeComponent0 };
//# sourceMappingURL=home.component.ngfactory.js.map