/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var import0 = require('@angular/core/src/linker/ng_module_factory');
var import1 = require('@angular/forms/src/form_providers');
var import2 = require('@angular/forms/src/directives');
var import3 = require('@angular/forms/src/directives/radio_control_value_accessor');
var import5 = require('@angular/forms/src/form_builder');
var FormsModuleInjector = (function (_super) {
    __extends(FormsModuleInjector, _super);
    function FormsModuleInjector(parent) {
        _super.call(this, parent, [], []);
    }
    Object.defineProperty(FormsModuleInjector.prototype, "_RadioControlRegistry_2", {
        get: function () {
            if ((this.__RadioControlRegistry_2 == null)) {
                (this.__RadioControlRegistry_2 = new import3.RadioControlRegistry());
            }
            return this.__RadioControlRegistry_2;
        },
        enumerable: true,
        configurable: true
    });
    FormsModuleInjector.prototype.createInternal = function () {
        this._InternalFormsSharedModule_0 = new import2.InternalFormsSharedModule();
        this._FormsModule_1 = new import1.FormsModule();
        return this._FormsModule_1;
    };
    FormsModuleInjector.prototype.getInternal = function (token, notFoundResult) {
        if ((token === import2.InternalFormsSharedModule)) {
            return this._InternalFormsSharedModule_0;
        }
        if ((token === import1.FormsModule)) {
            return this._FormsModule_1;
        }
        if ((token === import3.RadioControlRegistry)) {
            return this._RadioControlRegistry_2;
        }
        return notFoundResult;
    };
    FormsModuleInjector.prototype.destroyInternal = function () {
    };
    return FormsModuleInjector;
}(import0.NgModuleInjector));
exports.FormsModuleNgFactory = new import0.NgModuleFactory(FormsModuleInjector, import1.FormsModule);
var ReactiveFormsModuleInjector = (function (_super) {
    __extends(ReactiveFormsModuleInjector, _super);
    function ReactiveFormsModuleInjector(parent) {
        _super.call(this, parent, [], []);
    }
    Object.defineProperty(ReactiveFormsModuleInjector.prototype, "_FormBuilder_2", {
        get: function () {
            if ((this.__FormBuilder_2 == null)) {
                (this.__FormBuilder_2 = new import5.FormBuilder());
            }
            return this.__FormBuilder_2;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ReactiveFormsModuleInjector.prototype, "_RadioControlRegistry_3", {
        get: function () {
            if ((this.__RadioControlRegistry_3 == null)) {
                (this.__RadioControlRegistry_3 = new import3.RadioControlRegistry());
            }
            return this.__RadioControlRegistry_3;
        },
        enumerable: true,
        configurable: true
    });
    ReactiveFormsModuleInjector.prototype.createInternal = function () {
        this._InternalFormsSharedModule_0 = new import2.InternalFormsSharedModule();
        this._ReactiveFormsModule_1 = new import1.ReactiveFormsModule();
        return this._ReactiveFormsModule_1;
    };
    ReactiveFormsModuleInjector.prototype.getInternal = function (token, notFoundResult) {
        if ((token === import2.InternalFormsSharedModule)) {
            return this._InternalFormsSharedModule_0;
        }
        if ((token === import1.ReactiveFormsModule)) {
            return this._ReactiveFormsModule_1;
        }
        if ((token === import5.FormBuilder)) {
            return this._FormBuilder_2;
        }
        if ((token === import3.RadioControlRegistry)) {
            return this._RadioControlRegistry_3;
        }
        return notFoundResult;
    };
    ReactiveFormsModuleInjector.prototype.destroyInternal = function () {
    };
    return ReactiveFormsModuleInjector;
}(import0.NgModuleInjector));
exports.ReactiveFormsModuleNgFactory = new import0.NgModuleFactory(ReactiveFormsModuleInjector, import1.ReactiveFormsModule);
//# sourceMappingURL=form_providers.ngfactory.js.map